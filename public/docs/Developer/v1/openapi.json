{
    "openapi": "3.0.0",
    "info": {
        "title": "emsearch API",
        "version": "1.0"
    },
    "servers": [
        {
            "url": "https:\/\/emsearch.ryan.ems-dev.net"
        }
    ],
    "paths": {
        "\/api\/searchUseCase\/{searchUseCaseId}\/search": {
            "get": {
                "summary": "Perform search with the specified search use case",
                "parameters": [
                    {
                        "name": "query_string",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "minLength": 1,
                            "type": "string"
                        }
                    },
                    {
                        "name": "i18n_lang_id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "maxLength": 30,
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "minimum": 1,
                            "type": "integer"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "minimum": 1,
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": []
                        }
                    }
                }
            },
            "head": {
                "summary": "Perform search with the specified search use case",
                "parameters": [
                    {
                        "name": "query_string",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "minLength": 1,
                            "type": "string"
                        }
                    },
                    {
                        "name": "i18n_lang_id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "maxLength": 30,
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "minimum": 1,
                            "type": "integer"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "minimum": 1,
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": []
                        }
                    }
                }
            }
        },
        "\/api\/me": {
            "get": {
                "summary": "Get current user",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": []
                        }
                    }
                }
            },
            "head": {
                "summary": "Get current user",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": []
                        }
                    }
                }
            }
        },
        "\/api\/me\/project": {
            "get": {
                "summary": "Current user project list",
                "description": "You can specify a GET parameter `user_role_id` to filter results.",
                "parameters": [
                    {
                        "name": "user_role_id",
                        "in": "query",
                        "required": false,
                        "schema": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": []
                        }
                    }
                }
            },
            "head": {
                "summary": "Current user project list",
                "description": "You can specify a GET parameter `user_role_id` to filter results.",
                "parameters": [
                    {
                        "name": "user_role_id",
                        "in": "query",
                        "required": false,
                        "schema": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": []
                        }
                    }
                }
            }
        },
        "\/api\/me\/notification": {
            "get": {
                "summary": "Current user notification list",
                "description": "You can specify a GET parameter `read_status` to filter results.",
                "parameters": [
                    {
                        "name": "read_status",
                        "in": "query",
                        "required": false,
                        "schema": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": []
                        }
                    }
                }
            },
            "head": {
                "summary": "Current user notification list",
                "description": "You can specify a GET parameter `read_status` to filter results.",
                "parameters": [
                    {
                        "name": "read_status",
                        "in": "query",
                        "required": false,
                        "schema": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": []
                        }
                    }
                }
            }
        },
        "\/api\/me\/notification\/{notificationId}\/read": {
            "post": {
                "summary": "Mark the specified user notification as read",
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application\/json": []
                        }
                    }
                }
            }
        },
        "\/api\/me\/notification\/{notificationId}\/unread": {
            "post": {
                "summary": "Mark the specified user notification as unread",
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application\/json": []
                        }
                    }
                }
            }
        },
        "\/api\/userGroup": {
            "get": {
                "summary": "Show User group list",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": []
                        }
                    }
                }
            },
            "head": {
                "summary": "Show User group list",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": []
                        }
                    }
                }
            }
        },
        "\/api\/userGroup\/{userGroupId}": {
            "get": {
                "summary": "Get specified User group",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": []
                        }
                    }
                }
            },
            "head": {
                "summary": "Get specified User group",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": []
                        }
                    }
                }
            }
        },
        "\/api\/user": {
            "get": {
                "summary": "User list",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": []
                        }
                    }
                }
            },
            "post": {
                "summary": "Create and store new user",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "required": [
                                    "user_group_id",
                                    "name",
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "user_group_id": [],
                                    "name": {
                                        "maxLength": 100,
                                        "type": "string"
                                    },
                                    "email": [],
                                    "password": []
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application\/json": []
                        }
                    }
                }
            },
            "head": {
                "summary": "User list",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": []
                        }
                    }
                }
            }
        },
        "\/api\/user\/{userId}": {
            "get": {
                "summary": "Get specified user",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": []
                        }
                    }
                }
            },
            "put": {
                "summary": "Update a specified user",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "required": [
                                    "user_group_id",
                                    "name",
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "user_group_id": [],
                                    "name": {
                                        "maxLength": 100,
                                        "type": "string"
                                    },
                                    "email": [],
                                    "password": []
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application\/json": []
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete specified user",
                "description": "All relationships between the user and his projects will be automatically deleted too.<br \/>\nAll projects owned by the user will be automatically deleted too.",
                "responses": {
                    "204": {
                        "description": "",
                        "content": {
                            "application\/json": []
                        }
                    }
                }
            },
            "head": {
                "summary": "Get specified user",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": []
                        }
                    }
                }
            },
            "patch": {
                "summary": "Update a specified user",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "required": [
                                    "user_group_id",
                                    "name",
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "user_group_id": [],
                                    "name": {
                                        "maxLength": 100,
                                        "type": "string"
                                    },
                                    "email": [],
                                    "password": []
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application\/json": []
                        }
                    }
                }
            }
        },
        "\/api\/userGroup\/{userGroupId}\/user": {
            "get": {
                "summary": "User group user list",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": []
                        }
                    }
                }
            },
            "head": {
                "summary": "User group user list",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": []
                        }
                    }
                }
            }
        },
        "\/api\/user\/{userId}\/userHasProject": {
            "get": {
                "summary": "User relationship between users and projects list",
                "description": "You can specify a GET parameter `user_role_id` to filter results.",
                "parameters": [
                    {
                        "name": "user_role_id",
                        "in": "query",
                        "required": false,
                        "schema": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": []
                        }
                    }
                }
            },
            "head": {
                "summary": "User relationship between users and projects list",
                "description": "You can specify a GET parameter `user_role_id` to filter results.",
                "parameters": [
                    {
                        "name": "user_role_id",
                        "in": "query",
                        "required": false,
                        "schema": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": []
                        }
                    }
                }
            }
        },
        "\/api\/project\/{projectId}\/userHasProject": {
            "get": {
                "summary": "Project relationship between users and projects list",
                "description": "You can specify a GET parameter `user_role_id` to filter results.",
                "parameters": [
                    {
                        "name": "user_role_id",
                        "in": "query",
                        "required": false,
                        "schema": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": []
                        }
                    }
                }
            },
            "head": {
                "summary": "Project relationship between users and projects list",
                "description": "You can specify a GET parameter `user_role_id` to filter results.",
                "parameters": [
                    {
                        "name": "user_role_id",
                        "in": "query",
                        "required": false,
                        "schema": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": []
                        }
                    }
                }
            }
        },
        "\/api\/user\/{userId}\/project": {
            "get": {
                "summary": "User project list",
                "description": "You can specify a GET parameter `user_role_id` to filter results.",
                "parameters": [
                    {
                        "name": "user_role_id",
                        "in": "query",
                        "required": false,
                        "schema": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": []
                        }
                    }
                }
            },
            "head": {
                "summary": "User project list",
                "description": "You can specify a GET parameter `user_role_id` to filter results.",
                "parameters": [
                    {
                        "name": "user_role_id",
                        "in": "query",
                        "required": false,
                        "schema": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": []
                        }
                    }
                }
            }
        },
        "\/api\/project": {
            "get": {
                "summary": "Project list",
                "responses": {
                    "200": {
                        "description": "A Project list",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ProjectList"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "Create and store new project",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "required": [
                                    "search_engine_id",
                                    "name"
                                ],
                                "properties": {
                                    "search_engine_id": {
                                        "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
                                        "type": "string",
                                        "description": "UUID"
                                    },
                                    "data_stream_id": {
                                        "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
                                        "type": "string",
                                        "description": "UUID"
                                    },
                                    "name": {
                                        "maxLength": 100,
                                        "minLength": 5,
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "The created Project",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/Project"
                                }
                            }
                        }
                    }
                }
            },
            "head": {
                "summary": "Project list",
                "responses": {
                    "200": {
                        "description": "A Project list",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ProjectList"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/project\/{projectId}": {
            "get": {
                "summary": "Get specified project",
                "responses": {
                    "200": {
                        "description": "A Project",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/Project"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "summary": "Update a specified project",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "required": [
                                    "search_engine_id",
                                    "name"
                                ],
                                "properties": {
                                    "search_engine_id": {
                                        "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
                                        "type": "string",
                                        "description": "UUID"
                                    },
                                    "data_stream_id": {
                                        "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
                                        "type": "string",
                                        "description": "UUID"
                                    },
                                    "name": {
                                        "maxLength": 100,
                                        "minLength": 5,
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "The updated Project",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/Project"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete specified project",
                "description": "All relationships between the project and his users will be automatically deleted too.<br \/>\nThe project sync items will be automatically deleted too.<br \/>\nThe project data stream will be automatically deleted too, if exists.\n<aside class=\"notice\">Only <code>Owner<\/code> of project is allowed to delete it.<\/aside>",
                "responses": {
                    "204": {
                        "description": "Empty response",
                        "content": {
                            "application\/json": []
                        }
                    }
                }
            },
            "head": {
                "summary": "Get specified project",
                "responses": {
                    "200": {
                        "description": "A Project",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/Project"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "summary": "Update a specified project",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "required": [
                                    "search_engine_id",
                                    "name"
                                ],
                                "properties": {
                                    "search_engine_id": {
                                        "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
                                        "type": "string",
                                        "description": "UUID"
                                    },
                                    "data_stream_id": {
                                        "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
                                        "type": "string",
                                        "description": "UUID"
                                    },
                                    "name": {
                                        "maxLength": 100,
                                        "minLength": 5,
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "The updated Project",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/Project"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/syncItem": {
            "get": {
                "summary": "Sync item list",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": []
                        }
                    }
                }
            },
            "post": {
                "summary": "Create and store new sync item",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "required": [
                                    "item_id",
                                    "project_id"
                                ],
                                "properties": {
                                    "item_id": {
                                        "maxLength": 191,
                                        "type": "string"
                                    },
                                    "project_id": {
                                        "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
                                        "type": "string",
                                        "description": "UUID"
                                    },
                                    "item_signature": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application\/json": []
                        }
                    }
                }
            },
            "head": {
                "summary": "Sync item list",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": []
                        }
                    }
                }
            }
        },
        "\/api\/syncItem\/{syncItemId},{projectId}": {
            "get": {
                "summary": "Get specified sync item",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": []
                        }
                    }
                }
            },
            "put": {
                "summary": "Update a specified sync item",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "required": [
                                    "item_id",
                                    "project_id"
                                ],
                                "properties": {
                                    "item_id": {
                                        "maxLength": 191,
                                        "type": "string"
                                    },
                                    "project_id": {
                                        "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
                                        "type": "string",
                                        "description": "UUID"
                                    },
                                    "item_signature": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application\/json": []
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete specified sync item",
                "responses": {
                    "204": {
                        "description": "",
                        "content": {
                            "application\/json": []
                        }
                    }
                }
            },
            "head": {
                "summary": "Get specified sync item",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": []
                        }
                    }
                }
            },
            "patch": {
                "summary": "Update a specified sync item",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "required": [
                                    "item_id",
                                    "project_id"
                                ],
                                "properties": {
                                    "item_id": {
                                        "maxLength": 191,
                                        "type": "string"
                                    },
                                    "project_id": {
                                        "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
                                        "type": "string",
                                        "description": "UUID"
                                    },
                                    "item_signature": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application\/json": []
                        }
                    }
                }
            }
        },
        "\/api\/project\/{projectId}\/syncItem": {
            "get": {
                "summary": "Project sync item list",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": []
                        }
                    }
                }
            },
            "head": {
                "summary": "Project sync item list",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": []
                        }
                    }
                }
            }
        },
        "\/api\/syncTask": {
            "get": {
                "summary": "Sync task list",
                "description": "You can specify a GET parameter `root` (return only root tasks if true, children only if false) to filter results.<br \/>\nFilter results with `sync_task_status_id` GET parameter.",
                "parameters": [
                    {
                        "name": "root",
                        "in": "query",
                        "required": false,
                        "schema": []
                    },
                    {
                        "name": "sync_task_status_id",
                        "in": "query",
                        "required": false,
                        "schema": []
                    },
                    {
                        "name": "planned_before",
                        "in": "query",
                        "required": false,
                        "schema": []
                    },
                    {
                        "name": "planned_after",
                        "in": "query",
                        "required": false,
                        "schema": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": []
                        }
                    }
                }
            },
            "post": {
                "summary": "Create and store new sync task",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "required": [
                                    "sync_task_type_id",
                                    "sync_task_status_id",
                                    "created_by_user_id",
                                    "project_id"
                                ],
                                "properties": {
                                    "sync_task_id": {
                                        "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
                                        "type": "string",
                                        "description": "UUID"
                                    },
                                    "sync_task_type_id": {
                                        "maxLength": 50,
                                        "type": "string"
                                    },
                                    "sync_task_status_id": {
                                        "maxLength": 50,
                                        "type": "string"
                                    },
                                    "created_by_user_id": {
                                        "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
                                        "type": "string",
                                        "description": "UUID"
                                    },
                                    "project_id": {
                                        "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
                                        "type": "string",
                                        "description": "UUID"
                                    },
                                    "planned_at": []
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application\/json": []
                        }
                    }
                }
            },
            "head": {
                "summary": "Sync task list",
                "description": "You can specify a GET parameter `root` (return only root tasks if true, children only if false) to filter results.<br \/>\nFilter results with `sync_task_status_id` GET parameter.",
                "parameters": [
                    {
                        "name": "root",
                        "in": "query",
                        "required": false,
                        "schema": []
                    },
                    {
                        "name": "sync_task_status_id",
                        "in": "query",
                        "required": false,
                        "schema": []
                    },
                    {
                        "name": "planned_before",
                        "in": "query",
                        "required": false,
                        "schema": []
                    },
                    {
                        "name": "planned_after",
                        "in": "query",
                        "required": false,
                        "schema": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": []
                        }
                    }
                }
            }
        },
        "\/api\/syncTask\/{syncTaskId}": {
            "get": {
                "summary": "Get specified sync task",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": []
                        }
                    }
                }
            },
            "put": {
                "summary": "Update a specified sync task",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "required": [
                                    "sync_task_type_id",
                                    "sync_task_status_id",
                                    "created_by_user_id",
                                    "project_id"
                                ],
                                "properties": {
                                    "sync_task_id": {
                                        "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
                                        "type": "string",
                                        "description": "UUID"
                                    },
                                    "sync_task_type_id": {
                                        "maxLength": 50,
                                        "type": "string"
                                    },
                                    "sync_task_status_id": {
                                        "maxLength": 50,
                                        "type": "string"
                                    },
                                    "created_by_user_id": {
                                        "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
                                        "type": "string",
                                        "description": "UUID"
                                    },
                                    "project_id": {
                                        "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
                                        "type": "string",
                                        "description": "UUID"
                                    },
                                    "planned_at": []
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application\/json": []
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete specified sync task",
                "responses": {
                    "204": {
                        "description": "",
                        "content": {
                            "application\/json": []
                        }
                    }
                }
            },
            "head": {
                "summary": "Get specified sync task",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": []
                        }
                    }
                }
            },
            "patch": {
                "summary": "Update a specified sync task",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "required": [
                                    "sync_task_type_id",
                                    "sync_task_status_id",
                                    "created_by_user_id",
                                    "project_id"
                                ],
                                "properties": {
                                    "sync_task_id": {
                                        "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
                                        "type": "string",
                                        "description": "UUID"
                                    },
                                    "sync_task_type_id": {
                                        "maxLength": 50,
                                        "type": "string"
                                    },
                                    "sync_task_status_id": {
                                        "maxLength": 50,
                                        "type": "string"
                                    },
                                    "created_by_user_id": {
                                        "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
                                        "type": "string",
                                        "description": "UUID"
                                    },
                                    "project_id": {
                                        "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
                                        "type": "string",
                                        "description": "UUID"
                                    },
                                    "planned_at": []
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application\/json": []
                        }
                    }
                }
            }
        },
        "\/api\/syncTask\/{syncTaskId}\/children": {
            "get": {
                "summary": "Sync task sync task children list",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": []
                        }
                    }
                }
            },
            "head": {
                "summary": "Sync task sync task children list",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": []
                        }
                    }
                }
            }
        },
        "\/api\/syncTask\/{syncTaskId}\/syncTaskLog": {
            "get": {
                "summary": "Sync task sync task logs list",
                "description": "You can specify a GET parameter `public` to filter results (Only allowed for `Developer` and `Support` users).",
                "parameters": [
                    {
                        "name": "public",
                        "in": "query",
                        "required": false,
                        "schema": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": []
                        }
                    }
                }
            },
            "head": {
                "summary": "Sync task sync task logs list",
                "description": "You can specify a GET parameter `public` to filter results (Only allowed for `Developer` and `Support` users).",
                "parameters": [
                    {
                        "name": "public",
                        "in": "query",
                        "required": false,
                        "schema": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": []
                        }
                    }
                }
            }
        },
        "\/api\/project\/{projectId}\/syncTask": {
            "get": {
                "summary": "Project sync task list",
                "description": "You can specify a GET parameter `root` (return only root tasks if true, children only if false) to filter results.",
                "parameters": [
                    {
                        "name": "root",
                        "in": "query",
                        "required": false,
                        "schema": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": []
                        }
                    }
                }
            },
            "head": {
                "summary": "Project sync task list",
                "description": "You can specify a GET parameter `root` (return only root tasks if true, children only if false) to filter results.",
                "parameters": [
                    {
                        "name": "root",
                        "in": "query",
                        "required": false,
                        "schema": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": []
                        }
                    }
                }
            }
        },
        "\/api\/syncTaskType": {
            "get": {
                "summary": "Show sync task type list",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": []
                        }
                    }
                }
            },
            "post": {
                "summary": "Create and store new sync task type",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "required": [
                                    "id"
                                ],
                                "properties": {
                                    "id": {
                                        "maxLength": 50,
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application\/json": []
                        }
                    }
                }
            },
            "head": {
                "summary": "Show sync task type list",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": []
                        }
                    }
                }
            }
        },
        "\/api\/syncTaskType\/{syncTaskTypeId}": {
            "get": {
                "summary": "Get specified sync task type",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": []
                        }
                    }
                }
            },
            "put": {
                "summary": "Update a sync task type",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "required": [
                                    "id"
                                ],
                                "properties": {
                                    "id": {
                                        "maxLength": 50,
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application\/json": []
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete specified sync task type",
                "description": "The sync task type versions will be automatically deleted too.<br \/>\n<aside class=\"warning\">Avoid using this feature ! Check foreign keys constraints to remove dependent resources properly before.<\/aside>",
                "responses": {
                    "204": {
                        "description": "",
                        "content": {
                            "application\/json": []
                        }
                    }
                }
            },
            "head": {
                "summary": "Get specified sync task type",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": []
                        }
                    }
                }
            },
            "patch": {
                "summary": "Update a sync task type",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "required": [
                                    "id"
                                ],
                                "properties": {
                                    "id": {
                                        "maxLength": 50,
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application\/json": []
                        }
                    }
                }
            }
        },
        "\/api\/syncTaskTypeVersion": {
            "get": {
                "summary": "Sync task type version item list",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": []
                        }
                    }
                }
            },
            "post": {
                "summary": "Create and store new sync task type version",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "required": [
                                    "sync_task_type_id",
                                    "i18n_lang_id",
                                    "description"
                                ],
                                "properties": {
                                    "sync_task_type_id": {
                                        "maxLength": 50,
                                        "type": "string"
                                    },
                                    "i18n_lang_id": {
                                        "maxLength": 30,
                                        "type": "string"
                                    },
                                    "description": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application\/json": []
                        }
                    }
                }
            },
            "head": {
                "summary": "Sync task type version item list",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": []
                        }
                    }
                }
            }
        },
        "\/api\/syncTaskTypeVersion\/{syncTaskTypeId},{i18nLangId}": {
            "get": {
                "summary": "Get specified sync task type version",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": []
                        }
                    }
                }
            },
            "put": {
                "summary": "Update a specified sync task type version",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "required": [
                                    "sync_task_type_id",
                                    "i18n_lang_id",
                                    "description"
                                ],
                                "properties": {
                                    "sync_task_type_id": {
                                        "maxLength": 50,
                                        "type": "string"
                                    },
                                    "i18n_lang_id": {
                                        "maxLength": 30,
                                        "type": "string"
                                    },
                                    "description": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application\/json": []
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete specified sync task type version",
                "responses": {
                    "204": {
                        "description": "",
                        "content": {
                            "application\/json": []
                        }
                    }
                }
            },
            "head": {
                "summary": "Get specified sync task type version",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": []
                        }
                    }
                }
            },
            "patch": {
                "summary": "Update a specified sync task type version",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "required": [
                                    "sync_task_type_id",
                                    "i18n_lang_id",
                                    "description"
                                ],
                                "properties": {
                                    "sync_task_type_id": {
                                        "maxLength": 50,
                                        "type": "string"
                                    },
                                    "i18n_lang_id": {
                                        "maxLength": 30,
                                        "type": "string"
                                    },
                                    "description": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application\/json": []
                        }
                    }
                }
            }
        },
        "\/api\/syncTaskType\/{syncTaskTypeId}\/version": {
            "get": {
                "summary": "Sync task type sync task type versions list",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": []
                        }
                    }
                }
            },
            "head": {
                "summary": "Sync task type sync task type versions list",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": []
                        }
                    }
                }
            }
        },
        "\/api\/syncTaskStatus": {
            "get": {
                "summary": "Show sync task status list",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": []
                        }
                    }
                }
            },
            "post": {
                "summary": "Create and store new sync task status",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "required": [
                                    "id"
                                ],
                                "properties": {
                                    "id": {
                                        "maxLength": 50,
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application\/json": []
                        }
                    }
                }
            },
            "head": {
                "summary": "Show sync task status list",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": []
                        }
                    }
                }
            }
        },
        "\/api\/syncTaskStatus\/{syncTaskStatusId}": {
            "get": {
                "summary": "Get specified sync task status",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": []
                        }
                    }
                }
            },
            "put": {
                "summary": "Update a sync task status",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "required": [
                                    "id"
                                ],
                                "properties": {
                                    "id": {
                                        "maxLength": 50,
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application\/json": []
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete specified sync task status",
                "description": "The sync task status versions will be automatically deleted too.<br \/>\n<aside class=\"warning\">Avoid using this feature ! Check foreign keys constraints to remove dependent resources properly before.<\/aside>",
                "responses": {
                    "204": {
                        "description": "",
                        "content": {
                            "application\/json": []
                        }
                    }
                }
            },
            "head": {
                "summary": "Get specified sync task status",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": []
                        }
                    }
                }
            },
            "patch": {
                "summary": "Update a sync task status",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "required": [
                                    "id"
                                ],
                                "properties": {
                                    "id": {
                                        "maxLength": 50,
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application\/json": []
                        }
                    }
                }
            }
        },
        "\/api\/syncTaskStatusVersion": {
            "get": {
                "summary": "Sync task status version item list",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": []
                        }
                    }
                }
            },
            "post": {
                "summary": "Create and store new sync task status version",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "required": [
                                    "sync_task_status_id",
                                    "i18n_lang_id",
                                    "description"
                                ],
                                "properties": {
                                    "sync_task_status_id": {
                                        "maxLength": 50,
                                        "type": "string"
                                    },
                                    "i18n_lang_id": {
                                        "maxLength": 30,
                                        "type": "string"
                                    },
                                    "description": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application\/json": []
                        }
                    }
                }
            },
            "head": {
                "summary": "Sync task status version item list",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": []
                        }
                    }
                }
            }
        },
        "\/api\/syncTaskStatusVersion\/{syncTaskStatusId},{i18nLangId}": {
            "get": {
                "summary": "Get specified sync task status version",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": []
                        }
                    }
                }
            },
            "put": {
                "summary": "Update a specified sync task status version",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "required": [
                                    "sync_task_status_id",
                                    "i18n_lang_id",
                                    "description"
                                ],
                                "properties": {
                                    "sync_task_status_id": {
                                        "maxLength": 50,
                                        "type": "string"
                                    },
                                    "i18n_lang_id": {
                                        "maxLength": 30,
                                        "type": "string"
                                    },
                                    "description": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application\/json": []
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete specified sync task status version",
                "responses": {
                    "204": {
                        "description": "",
                        "content": {
                            "application\/json": []
                        }
                    }
                }
            },
            "head": {
                "summary": "Get specified sync task status version",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": []
                        }
                    }
                }
            },
            "patch": {
                "summary": "Update a specified sync task status version",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "required": [
                                    "sync_task_status_id",
                                    "i18n_lang_id",
                                    "description"
                                ],
                                "properties": {
                                    "sync_task_status_id": {
                                        "maxLength": 50,
                                        "type": "string"
                                    },
                                    "i18n_lang_id": {
                                        "maxLength": 30,
                                        "type": "string"
                                    },
                                    "description": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application\/json": []
                        }
                    }
                }
            }
        },
        "\/api\/syncTaskStatus\/{syncTaskStatusId}\/version": {
            "get": {
                "summary": "Sync task status sync task status versions list",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": []
                        }
                    }
                }
            },
            "head": {
                "summary": "Sync task status sync task status versions list",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": []
                        }
                    }
                }
            }
        },
        "\/api\/dataStream": {
            "get": {
                "summary": "Show data stream list",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": []
                        }
                    }
                }
            },
            "post": {
                "summary": "Create and store new data stream",
                "description": "Only one data stream per project is allowed.",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "required": [
                                    "data_stream_decoder_id",
                                    "name",
                                    "feed_url"
                                ],
                                "properties": {
                                    "data_stream_decoder_id": {
                                        "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
                                        "type": "string",
                                        "description": "UUID"
                                    },
                                    "name": {
                                        "maxLength": 200,
                                        "type": "string"
                                    },
                                    "feed_url": []
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application\/json": []
                        }
                    }
                }
            },
            "head": {
                "summary": "Show data stream list",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": []
                        }
                    }
                }
            }
        },
        "\/api\/dataStream\/{dataStreamId}": {
            "get": {
                "summary": "Get specified data stream",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": []
                        }
                    }
                }
            },
            "put": {
                "summary": "Update a data stream",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "required": [
                                    "data_stream_decoder_id",
                                    "name",
                                    "feed_url"
                                ],
                                "properties": {
                                    "data_stream_decoder_id": {
                                        "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
                                        "type": "string",
                                        "description": "UUID"
                                    },
                                    "name": {
                                        "maxLength": 200,
                                        "type": "string"
                                    },
                                    "feed_url": []
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application\/json": []
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete specified data stream",
                "responses": {
                    "204": {
                        "description": "",
                        "content": {
                            "application\/json": []
                        }
                    }
                }
            },
            "head": {
                "summary": "Get specified data stream",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": []
                        }
                    }
                }
            },
            "patch": {
                "summary": "Update a data stream",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "required": [
                                    "data_stream_decoder_id",
                                    "name",
                                    "feed_url"
                                ],
                                "properties": {
                                    "data_stream_decoder_id": {
                                        "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
                                        "type": "string",
                                        "description": "UUID"
                                    },
                                    "name": {
                                        "maxLength": 200,
                                        "type": "string"
                                    },
                                    "feed_url": []
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application\/json": []
                        }
                    }
                }
            }
        },
        "\/api\/dataStreamField": {
            "get": {
                "summary": "Show data stream field list",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": []
                        }
                    }
                }
            },
            "post": {
                "summary": "Create and store new data stream field",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "required": [
                                    "data_stream_id",
                                    "name",
                                    "path",
                                    "versioned",
                                    "searchable",
                                    "to_retrieve"
                                ],
                                "properties": {
                                    "data_stream_id": {
                                        "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
                                        "type": "string",
                                        "description": "UUID"
                                    },
                                    "name": {
                                        "maxLength": 200,
                                        "minLength": 1,
                                        "type": "string"
                                    },
                                    "path": {
                                        "maxLength": 1000,
                                        "minLength": 1,
                                        "type": "string"
                                    },
                                    "versioned": [],
                                    "searchable": [],
                                    "to_retrieve": []
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application\/json": []
                        }
                    }
                }
            },
            "head": {
                "summary": "Show data stream field list",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": []
                        }
                    }
                }
            }
        },
        "\/api\/dataStreamField\/{dataStreamFieldId}": {
            "get": {
                "summary": "Get specified data stream field",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": []
                        }
                    }
                }
            },
            "put": {
                "summary": "Update a data stream field",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "required": [
                                    "data_stream_id",
                                    "name",
                                    "path",
                                    "versioned",
                                    "searchable",
                                    "to_retrieve"
                                ],
                                "properties": {
                                    "data_stream_id": {
                                        "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
                                        "type": "string",
                                        "description": "UUID"
                                    },
                                    "name": {
                                        "maxLength": 200,
                                        "minLength": 1,
                                        "type": "string"
                                    },
                                    "path": {
                                        "maxLength": 1000,
                                        "minLength": 1,
                                        "type": "string"
                                    },
                                    "versioned": [],
                                    "searchable": [],
                                    "to_retrieve": []
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application\/json": []
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete specified data stream field\n*",
                "responses": {
                    "204": {
                        "description": "",
                        "content": {
                            "application\/json": []
                        }
                    }
                }
            },
            "head": {
                "summary": "Get specified data stream field",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": []
                        }
                    }
                }
            },
            "patch": {
                "summary": "Update a data stream field",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "required": [
                                    "data_stream_id",
                                    "name",
                                    "path",
                                    "versioned",
                                    "searchable",
                                    "to_retrieve"
                                ],
                                "properties": {
                                    "data_stream_id": {
                                        "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
                                        "type": "string",
                                        "description": "UUID"
                                    },
                                    "name": {
                                        "maxLength": 200,
                                        "minLength": 1,
                                        "type": "string"
                                    },
                                    "path": {
                                        "maxLength": 1000,
                                        "minLength": 1,
                                        "type": "string"
                                    },
                                    "versioned": [],
                                    "searchable": [],
                                    "to_retrieve": []
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application\/json": []
                        }
                    }
                }
            }
        },
        "\/api\/dataStream\/{dataStreamPresetId}\/dataStreamField": {
            "get": {
                "summary": "Data stream data stream field list\n *",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": []
                        }
                    }
                }
            },
            "head": {
                "summary": "Data stream data stream field list\n *",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": []
                        }
                    }
                }
            }
        },
        "\/api\/project\/{projectId}\/dataStream": {
            "get": {
                "summary": "Show project data stream",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": []
                        }
                    }
                }
            },
            "put": {
                "summary": "Update the project data stream",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "required": [
                                    "data_stream_decoder_id",
                                    "name",
                                    "feed_url"
                                ],
                                "properties": {
                                    "data_stream_decoder_id": {
                                        "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
                                        "type": "string",
                                        "description": "UUID"
                                    },
                                    "name": {
                                        "maxLength": 200,
                                        "type": "string"
                                    },
                                    "feed_url": []
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application\/json": []
                        }
                    }
                }
            },
            "post": {
                "summary": "Create and store the project data stream",
                "description": "Only one data stream per project is allowed.",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "required": [
                                    "data_stream_decoder_id",
                                    "name",
                                    "feed_url"
                                ],
                                "properties": {
                                    "data_stream_decoder_id": {
                                        "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
                                        "type": "string",
                                        "description": "UUID"
                                    },
                                    "name": {
                                        "maxLength": 200,
                                        "type": "string"
                                    },
                                    "feed_url": []
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application\/json": []
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete the project data stream",
                "responses": {
                    "204": {
                        "description": "",
                        "content": {
                            "application\/json": []
                        }
                    }
                }
            },
            "head": {
                "summary": "Show project data stream",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": []
                        }
                    }
                }
            },
            "patch": {
                "summary": "Update the project data stream",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "required": [
                                    "data_stream_decoder_id",
                                    "name",
                                    "feed_url"
                                ],
                                "properties": {
                                    "data_stream_decoder_id": {
                                        "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
                                        "type": "string",
                                        "description": "UUID"
                                    },
                                    "name": {
                                        "maxLength": 200,
                                        "type": "string"
                                    },
                                    "feed_url": []
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application\/json": []
                        }
                    }
                }
            }
        },
        "\/api\/dataStreamHasI18nLang": {
            "get": {
                "summary": "List of relationships between data streams and i18n langs",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": []
                        }
                    }
                }
            },
            "post": {
                "summary": "Create and store new relationship between a data stream and a i18n lang",
                "description": "<aside class=\"notice\">Only one relationship per data stream\/i18n lang is allowed.<\/aside>",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "required": [
                                    "data_stream_id",
                                    "i18n_lang_id"
                                ],
                                "properties": {
                                    "data_stream_id": {
                                        "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
                                        "type": "string",
                                        "description": "UUID"
                                    },
                                    "i18n_lang_id": {
                                        "maxLength": 30,
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application\/json": []
                        }
                    }
                }
            },
            "head": {
                "summary": "List of relationships between data streams and i18n langs",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": []
                        }
                    }
                }
            }
        },
        "\/api\/dataStreamHasI18nLang\/{dataStreamId},{i18nLangId}": {
            "get": {
                "summary": "Get specified relationship between a data stream and a i18n lang",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": []
                        }
                    }
                }
            },
            "put": {
                "summary": "Update a specified relationship between a data stream and a i18n lang",
                "description": "<aside class=\"notice\">Only one relationship per data stream\/i18n lang is allowed.<\/aside>",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "required": [
                                    "data_stream_id",
                                    "i18n_lang_id"
                                ],
                                "properties": {
                                    "data_stream_id": {
                                        "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
                                        "type": "string",
                                        "description": "UUID"
                                    },
                                    "i18n_lang_id": {
                                        "maxLength": 30,
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application\/json": []
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete specified relationship between a data stream and a i18n lang",
                "responses": {
                    "204": {
                        "description": "",
                        "content": {
                            "application\/json": []
                        }
                    }
                }
            },
            "head": {
                "summary": "Get specified relationship between a data stream and a i18n lang",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": []
                        }
                    }
                }
            },
            "patch": {
                "summary": "Update a specified relationship between a data stream and a i18n lang",
                "description": "<aside class=\"notice\">Only one relationship per data stream\/i18n lang is allowed.<\/aside>",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "required": [
                                    "data_stream_id",
                                    "i18n_lang_id"
                                ],
                                "properties": {
                                    "data_stream_id": {
                                        "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
                                        "type": "string",
                                        "description": "UUID"
                                    },
                                    "i18n_lang_id": {
                                        "maxLength": 30,
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application\/json": []
                        }
                    }
                }
            }
        },
        "\/api\/dataStream\/{dataStreamId}\/dataStreamHasI18nLang": {
            "get": {
                "summary": "Data stream relationship between data stream and i18n langs list",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": []
                        }
                    }
                }
            },
            "head": {
                "summary": "Data stream relationship between data stream and i18n langs list",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": []
                        }
                    }
                }
            }
        },
        "\/api\/dataStream\/{dataStreamId}\/i18nLang": {
            "get": {
                "summary": "Data stream i18n lang list",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": []
                        }
                    }
                }
            },
            "head": {
                "summary": "Data stream i18n lang list",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": []
                        }
                    }
                }
            }
        },
        "\/api\/i18nLang\/{i18nLangId}\/dataStream": {
            "get": {
                "summary": "I18n lang data streams list",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": []
                        }
                    }
                }
            },
            "head": {
                "summary": "I18n lang data streams list",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": []
                        }
                    }
                }
            }
        },
        "\/api\/userHasProject": {
            "get": {
                "summary": "List of relationships between users and projects",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": []
                        }
                    }
                }
            },
            "post": {
                "summary": "Create and store new relationship between a user and a project",
                "description": "<aside class=\"notice\">Only one relationship per user\/project is allowed and only one user can be <code>Owner<\/code>of a project.<\/aside>",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "required": [
                                    "user_id",
                                    "project_id",
                                    "user_role_id"
                                ],
                                "properties": {
                                    "user_id": {
                                        "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
                                        "type": "string",
                                        "description": "UUID"
                                    },
                                    "project_id": {
                                        "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
                                        "type": "string",
                                        "description": "UUID"
                                    },
                                    "user_role_id": []
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application\/json": []
                        }
                    }
                }
            },
            "head": {
                "summary": "List of relationships between users and projects",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": []
                        }
                    }
                }
            }
        },
        "\/api\/userHasProject\/{userId},{projectId}": {
            "get": {
                "summary": "Get specified relationship between a user and a project",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": []
                        }
                    }
                }
            },
            "put": {
                "summary": "Update a specified relationship between a user and a project",
                "description": "<aside class=\"notice\">Only one relationship per user\/project is allowed and only one user can be <code>Owner<\/code>of a project.<\/aside>",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "required": [
                                    "user_id",
                                    "project_id",
                                    "user_role_id"
                                ],
                                "properties": {
                                    "user_id": {
                                        "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
                                        "type": "string",
                                        "description": "UUID"
                                    },
                                    "project_id": {
                                        "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
                                        "type": "string",
                                        "description": "UUID"
                                    },
                                    "user_role_id": []
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application\/json": []
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete specified relationship between a user and a project",
                "responses": {
                    "204": {
                        "description": "",
                        "content": {
                            "application\/json": []
                        }
                    }
                }
            },
            "head": {
                "summary": "Get specified relationship between a user and a project",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": []
                        }
                    }
                }
            },
            "patch": {
                "summary": "Update a specified relationship between a user and a project",
                "description": "<aside class=\"notice\">Only one relationship per user\/project is allowed and only one user can be <code>Owner<\/code>of a project.<\/aside>",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "required": [
                                    "user_id",
                                    "project_id",
                                    "user_role_id"
                                ],
                                "properties": {
                                    "user_id": {
                                        "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
                                        "type": "string",
                                        "description": "UUID"
                                    },
                                    "project_id": {
                                        "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
                                        "type": "string",
                                        "description": "UUID"
                                    },
                                    "user_role_id": []
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application\/json": []
                        }
                    }
                }
            }
        },
        "\/api\/dataStreamDecoder": {
            "get": {
                "summary": "Show data stream decoder list",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": []
                        }
                    }
                }
            },
            "post": {
                "summary": "Create and store new data stream decoder",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "class_name",
                                    "file_mime_type"
                                ],
                                "properties": {
                                    "name": {
                                        "maxLength": 200,
                                        "minLength": 5,
                                        "type": "string"
                                    },
                                    "class_name": {
                                        "type": "string"
                                    },
                                    "file_mime_type": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application\/json": []
                        }
                    }
                }
            },
            "head": {
                "summary": "Show data stream decoder list",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": []
                        }
                    }
                }
            }
        },
        "\/api\/dataStreamDecoder\/{dataStreamDecoderId}": {
            "get": {
                "summary": "Get specified data stream decoder",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": []
                        }
                    }
                }
            },
            "put": {
                "summary": "Update a data stream decoder",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "class_name",
                                    "file_mime_type"
                                ],
                                "properties": {
                                    "name": {
                                        "maxLength": 200,
                                        "minLength": 5,
                                        "type": "string"
                                    },
                                    "class_name": {
                                        "type": "string"
                                    },
                                    "file_mime_type": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application\/json": []
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete specified data stream decoder",
                "responses": {
                    "204": {
                        "description": "",
                        "content": {
                            "application\/json": []
                        }
                    }
                }
            },
            "head": {
                "summary": "Get specified data stream decoder",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": []
                        }
                    }
                }
            },
            "patch": {
                "summary": "Update a data stream decoder",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "class_name",
                                    "file_mime_type"
                                ],
                                "properties": {
                                    "name": {
                                        "maxLength": 200,
                                        "minLength": 5,
                                        "type": "string"
                                    },
                                    "class_name": {
                                        "type": "string"
                                    },
                                    "file_mime_type": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application\/json": []
                        }
                    }
                }
            }
        },
        "\/api\/dataStreamPreset": {
            "get": {
                "summary": "Show data stream preset list",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": []
                        }
                    }
                }
            },
            "post": {
                "summary": "Create and store new data stream preset",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "required": [
                                    "data_stream_decoder_id",
                                    "name"
                                ],
                                "properties": {
                                    "data_stream_decoder_id": {
                                        "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
                                        "type": "string",
                                        "description": "UUID"
                                    },
                                    "name": {
                                        "maxLength": 200,
                                        "minLength": 5,
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application\/json": []
                        }
                    }
                }
            },
            "head": {
                "summary": "Show data stream preset list",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": []
                        }
                    }
                }
            }
        },
        "\/api\/dataStreamPreset\/{dataStreamPresetId}": {
            "get": {
                "summary": "Get specified data stream preset",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": []
                        }
                    }
                }
            },
            "put": {
                "summary": "Update a data stream preset",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "required": [
                                    "data_stream_decoder_id",
                                    "name"
                                ],
                                "properties": {
                                    "data_stream_decoder_id": {
                                        "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
                                        "type": "string",
                                        "description": "UUID"
                                    },
                                    "name": {
                                        "maxLength": 200,
                                        "minLength": 5,
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application\/json": []
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete specified data stream preset\n*",
                "responses": {
                    "204": {
                        "description": "",
                        "content": {
                            "application\/json": []
                        }
                    }
                }
            },
            "head": {
                "summary": "Get specified data stream preset",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": []
                        }
                    }
                }
            },
            "patch": {
                "summary": "Update a data stream preset",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "required": [
                                    "data_stream_decoder_id",
                                    "name"
                                ],
                                "properties": {
                                    "data_stream_decoder_id": {
                                        "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
                                        "type": "string",
                                        "description": "UUID"
                                    },
                                    "name": {
                                        "maxLength": 200,
                                        "minLength": 5,
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application\/json": []
                        }
                    }
                }
            }
        },
        "\/api\/dataStreamPreset\/{dataStreamPresetId}\/dataStreamPresetField": {
            "get": {
                "summary": "Data stream preset data stream preset field list\n *",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": []
                        }
                    }
                }
            },
            "head": {
                "summary": "Data stream preset data stream preset field list\n *",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": []
                        }
                    }
                }
            }
        },
        "\/api\/dataStreamPresetField": {
            "get": {
                "summary": "Show data stream preset field list",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": []
                        }
                    }
                }
            },
            "post": {
                "summary": "Create and store new data stream preset field",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "required": [
                                    "data_stream_preset_id",
                                    "name",
                                    "path",
                                    "versioned",
                                    "searchable",
                                    "to_retrieve"
                                ],
                                "properties": {
                                    "data_stream_preset_id": {
                                        "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
                                        "type": "string",
                                        "description": "UUID"
                                    },
                                    "name": {
                                        "maxLength": 200,
                                        "minLength": 1,
                                        "type": "string"
                                    },
                                    "path": {
                                        "maxLength": 1000,
                                        "minLength": 1,
                                        "type": "string"
                                    },
                                    "versioned": [],
                                    "searchable": [],
                                    "to_retrieve": []
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application\/json": []
                        }
                    }
                }
            },
            "head": {
                "summary": "Show data stream preset field list",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": []
                        }
                    }
                }
            }
        },
        "\/api\/dataStreamPresetField\/{dataStreamPresetFieldId}": {
            "get": {
                "summary": "Get specified data stream preset field",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": []
                        }
                    }
                }
            },
            "put": {
                "summary": "Update a data stream preset field",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "required": [
                                    "data_stream_preset_id",
                                    "name",
                                    "path",
                                    "versioned",
                                    "searchable",
                                    "to_retrieve"
                                ],
                                "properties": {
                                    "data_stream_preset_id": {
                                        "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
                                        "type": "string",
                                        "description": "UUID"
                                    },
                                    "name": {
                                        "maxLength": 200,
                                        "minLength": 1,
                                        "type": "string"
                                    },
                                    "path": {
                                        "maxLength": 1000,
                                        "minLength": 1,
                                        "type": "string"
                                    },
                                    "versioned": [],
                                    "searchable": [],
                                    "to_retrieve": []
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application\/json": []
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete specified data stream preset field\n*",
                "responses": {
                    "204": {
                        "description": "",
                        "content": {
                            "application\/json": []
                        }
                    }
                }
            },
            "head": {
                "summary": "Get specified data stream preset field",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": []
                        }
                    }
                }
            },
            "patch": {
                "summary": "Update a data stream preset field",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "required": [
                                    "data_stream_preset_id",
                                    "name",
                                    "path",
                                    "versioned",
                                    "searchable",
                                    "to_retrieve"
                                ],
                                "properties": {
                                    "data_stream_preset_id": {
                                        "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
                                        "type": "string",
                                        "description": "UUID"
                                    },
                                    "name": {
                                        "maxLength": 200,
                                        "minLength": 1,
                                        "type": "string"
                                    },
                                    "path": {
                                        "maxLength": 1000,
                                        "minLength": 1,
                                        "type": "string"
                                    },
                                    "versioned": [],
                                    "searchable": [],
                                    "to_retrieve": []
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application\/json": []
                        }
                    }
                }
            }
        },
        "\/api\/i18nLang": {
            "get": {
                "summary": "Show i18n lang list",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": []
                        }
                    }
                }
            },
            "post": {
                "summary": "Create and store new i18n lang",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "required": [
                                    "id",
                                    "description"
                                ],
                                "properties": {
                                    "id": {
                                        "maxLength": 30,
                                        "type": "string"
                                    },
                                    "description": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application\/json": []
                        }
                    }
                }
            },
            "head": {
                "summary": "Show i18n lang list",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": []
                        }
                    }
                }
            }
        },
        "\/api\/i18nLang\/{i18nLangId}": {
            "get": {
                "summary": "Get specified i18n lang",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": []
                        }
                    }
                }
            },
            "put": {
                "summary": "Update a i18n lang",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "required": [
                                    "description"
                                ],
                                "properties": {
                                    "description": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application\/json": []
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete specified i18n Lang",
                "description": "<aside class=\"warning\">Avoid using this feature ! Check foreign keys constraints to remove dependent resources properly before.<\/aside>",
                "responses": {
                    "204": {
                        "description": "",
                        "content": {
                            "application\/json": []
                        }
                    }
                }
            },
            "head": {
                "summary": "Get specified i18n lang",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": []
                        }
                    }
                }
            },
            "patch": {
                "summary": "Update a i18n lang",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "required": [
                                    "description"
                                ],
                                "properties": {
                                    "description": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application\/json": []
                        }
                    }
                }
            }
        },
        "\/api\/i18nLang\/search": {
            "get": {
                "summary": "Show i18n lang list",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": []
                        }
                    }
                }
            },
            "head": {
                "summary": "Show i18n lang list",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": []
                        }
                    }
                }
            }
        },
        "\/api\/i18nLang\/{i18nLangId}\/syncTaskTypeVersion": {
            "get": {
                "summary": "I18n lang sync task type versions list",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": []
                        }
                    }
                }
            },
            "head": {
                "summary": "I18n lang sync task type versions list",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": []
                        }
                    }
                }
            }
        },
        "\/api\/searchEngine": {
            "get": {
                "summary": "Show search engine list",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": []
                        }
                    }
                }
            },
            "post": {
                "summary": "Create and store new search engine",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "class_name"
                                ],
                                "properties": {
                                    "name": {
                                        "maxLength": 100,
                                        "type": "string"
                                    },
                                    "class_name": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application\/json": []
                        }
                    }
                }
            },
            "head": {
                "summary": "Show search engine list",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": []
                        }
                    }
                }
            }
        },
        "\/api\/searchEngine\/{searchEngineId}": {
            "get": {
                "summary": "Get specified search engine",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": []
                        }
                    }
                }
            },
            "put": {
                "summary": "Update a search engine",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "class_name"
                                ],
                                "properties": {
                                    "name": {
                                        "maxLength": 100,
                                        "type": "string"
                                    },
                                    "class_name": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application\/json": []
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete specified search engine",
                "description": "<aside class=\"warning\">Avoid using this feature ! Check foreign keys constraints to remove dependent resources properly before.<\/aside>",
                "responses": {
                    "204": {
                        "description": "",
                        "content": {
                            "application\/json": []
                        }
                    }
                }
            },
            "head": {
                "summary": "Get specified search engine",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": []
                        }
                    }
                }
            },
            "patch": {
                "summary": "Update a search engine",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "class_name"
                                ],
                                "properties": {
                                    "name": {
                                        "maxLength": 100,
                                        "type": "string"
                                    },
                                    "class_name": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application\/json": []
                        }
                    }
                }
            }
        },
        "\/api\/searchEngine\/{searchEngineId}\/project": {
            "get": {
                "summary": "Search engine project list",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": []
                        }
                    }
                }
            },
            "head": {
                "summary": "Search engine project list",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": []
                        }
                    }
                }
            }
        },
        "\/api\/project\/{projectId}\/searchUseCase": {
            "get": {
                "summary": "Project search use case list",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": []
                        }
                    }
                }
            },
            "head": {
                "summary": "Project search use case list",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": []
                        }
                    }
                }
            }
        },
        "\/api\/searchUseCase": {
            "get": {
                "summary": "Show search use case list",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": []
                        }
                    }
                }
            },
            "post": {
                "summary": "Create and store new search use case",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "required": [
                                    "project_id",
                                    "name"
                                ],
                                "properties": {
                                    "project_id": {
                                        "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
                                        "type": "string",
                                        "description": "UUID"
                                    },
                                    "name": {
                                        "maxLength": 200,
                                        "minLength": 5,
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application\/json": []
                        }
                    }
                }
            },
            "head": {
                "summary": "Show search use case list",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": []
                        }
                    }
                }
            }
        },
        "\/api\/searchUseCase\/{searchUseCaseId}": {
            "get": {
                "summary": "Get specified search use case",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": []
                        }
                    }
                }
            },
            "put": {
                "summary": "Update a search use case",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "required": [
                                    "project_id",
                                    "name"
                                ],
                                "properties": {
                                    "project_id": {
                                        "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
                                        "type": "string",
                                        "description": "UUID"
                                    },
                                    "name": {
                                        "maxLength": 200,
                                        "minLength": 5,
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application\/json": []
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete specified search use case",
                "responses": {
                    "204": {
                        "description": "",
                        "content": {
                            "application\/json": []
                        }
                    }
                }
            },
            "head": {
                "summary": "Get specified search use case",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": []
                        }
                    }
                }
            },
            "patch": {
                "summary": "Update a search use case",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "required": [
                                    "project_id",
                                    "name"
                                ],
                                "properties": {
                                    "project_id": {
                                        "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
                                        "type": "string",
                                        "description": "UUID"
                                    },
                                    "name": {
                                        "maxLength": 200,
                                        "minLength": 5,
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application\/json": []
                        }
                    }
                }
            }
        },
        "\/api\/searchUseCaseField": {
            "get": {
                "summary": "Show search use case field list",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": []
                        }
                    }
                }
            },
            "post": {
                "summary": "Create and store new search use case field",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "required": [
                                    "search_use_case_id",
                                    "data_stream_field_id",
                                    "name",
                                    "searchable",
                                    "to_retrieve"
                                ],
                                "properties": {
                                    "search_use_case_id": {
                                        "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
                                        "type": "string",
                                        "description": "UUID"
                                    },
                                    "data_stream_field_id": {
                                        "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
                                        "type": "string",
                                        "description": "UUID"
                                    },
                                    "name": {
                                        "maxLength": 200,
                                        "minLength": 1,
                                        "type": "string"
                                    },
                                    "searchable": [],
                                    "to_retrieve": []
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application\/json": []
                        }
                    }
                }
            },
            "head": {
                "summary": "Show search use case field list",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": []
                        }
                    }
                }
            }
        },
        "\/api\/searchUseCaseField\/{searchUseCaseId},{dataStreamFieldId}": {
            "get": {
                "summary": "Get specified search use case field",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": []
                        }
                    }
                }
            },
            "put": {
                "summary": "Update a specified search use case field",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "required": [
                                    "search_use_case_id",
                                    "data_stream_field_id",
                                    "name",
                                    "searchable",
                                    "to_retrieve"
                                ],
                                "properties": {
                                    "search_use_case_id": {
                                        "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
                                        "type": "string",
                                        "description": "UUID"
                                    },
                                    "data_stream_field_id": {
                                        "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
                                        "type": "string",
                                        "description": "UUID"
                                    },
                                    "name": {
                                        "maxLength": 200,
                                        "minLength": 1,
                                        "type": "string"
                                    },
                                    "searchable": [],
                                    "to_retrieve": []
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application\/json": []
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete specified search use case field",
                "responses": {
                    "204": {
                        "description": "",
                        "content": {
                            "application\/json": []
                        }
                    }
                }
            },
            "head": {
                "summary": "Get specified search use case field",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": []
                        }
                    }
                }
            },
            "patch": {
                "summary": "Update a specified search use case field",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "required": [
                                    "search_use_case_id",
                                    "data_stream_field_id",
                                    "name",
                                    "searchable",
                                    "to_retrieve"
                                ],
                                "properties": {
                                    "search_use_case_id": {
                                        "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
                                        "type": "string",
                                        "description": "UUID"
                                    },
                                    "data_stream_field_id": {
                                        "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
                                        "type": "string",
                                        "description": "UUID"
                                    },
                                    "name": {
                                        "maxLength": 200,
                                        "minLength": 1,
                                        "type": "string"
                                    },
                                    "searchable": [],
                                    "to_retrieve": []
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application\/json": []
                        }
                    }
                }
            }
        },
        "\/api\/searchUseCase\/{searchUseCaseId}\/searchUseCaseField": {
            "get": {
                "summary": "Search use case search use case fields list",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": []
                        }
                    }
                }
            },
            "head": {
                "summary": "Search use case search use case fields list",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": []
                        }
                    }
                }
            }
        },
        "\/api\/searchUseCasePreset": {
            "get": {
                "summary": "Show search use case preset list",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": []
                        }
                    }
                }
            },
            "post": {
                "summary": "Create and store new search use case preset",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "required": [
                                    "data_stream_preset_id",
                                    "name"
                                ],
                                "properties": {
                                    "data_stream_preset_id": {
                                        "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
                                        "type": "string",
                                        "description": "UUID"
                                    },
                                    "name": {
                                        "maxLength": 200,
                                        "minLength": 5,
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application\/json": []
                        }
                    }
                }
            },
            "head": {
                "summary": "Show search use case preset list",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": []
                        }
                    }
                }
            }
        },
        "\/api\/searchUseCasePreset\/{searchUseCasePresetId}": {
            "get": {
                "summary": "Get specified search use case preset",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": []
                        }
                    }
                }
            },
            "put": {
                "summary": "Update a search use case preset",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "required": [
                                    "data_stream_preset_id",
                                    "name"
                                ],
                                "properties": {
                                    "data_stream_preset_id": {
                                        "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
                                        "type": "string",
                                        "description": "UUID"
                                    },
                                    "name": {
                                        "maxLength": 200,
                                        "minLength": 5,
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application\/json": []
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete specified search use case preset",
                "responses": {
                    "204": {
                        "description": "",
                        "content": {
                            "application\/json": []
                        }
                    }
                }
            },
            "head": {
                "summary": "Get specified search use case preset",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": []
                        }
                    }
                }
            },
            "patch": {
                "summary": "Update a search use case preset",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "required": [
                                    "data_stream_preset_id",
                                    "name"
                                ],
                                "properties": {
                                    "data_stream_preset_id": {
                                        "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
                                        "type": "string",
                                        "description": "UUID"
                                    },
                                    "name": {
                                        "maxLength": 200,
                                        "minLength": 5,
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application\/json": []
                        }
                    }
                }
            }
        },
        "\/api\/searchUseCasePresetField": {
            "get": {
                "summary": "Show search use case preset field list",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": []
                        }
                    }
                }
            },
            "post": {
                "summary": "Create and store new search use case preset field",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "required": [
                                    "search_use_case_preset_id",
                                    "data_stream_preset_field_id",
                                    "name",
                                    "searchable",
                                    "to_retrieve"
                                ],
                                "properties": {
                                    "search_use_case_preset_id": {
                                        "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
                                        "type": "string",
                                        "description": "UUID"
                                    },
                                    "data_stream_preset_field_id": {
                                        "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
                                        "type": "string",
                                        "description": "UUID"
                                    },
                                    "name": {
                                        "maxLength": 200,
                                        "minLength": 1,
                                        "type": "string"
                                    },
                                    "searchable": [],
                                    "to_retrieve": []
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application\/json": []
                        }
                    }
                }
            },
            "head": {
                "summary": "Show search use case preset field list",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": []
                        }
                    }
                }
            }
        },
        "\/api\/searchUseCasePresetField\/{searchUseCasePresetId},{dataStreamPresetFieldId}": {
            "get": {
                "summary": "Get specified search use case preset field",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": []
                        }
                    }
                }
            },
            "put": {
                "summary": "Update a specified search use case preset field",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "required": [
                                    "search_use_case_preset_id",
                                    "data_stream_preset_field_id",
                                    "name",
                                    "searchable",
                                    "to_retrieve"
                                ],
                                "properties": {
                                    "search_use_case_preset_id": {
                                        "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
                                        "type": "string",
                                        "description": "UUID"
                                    },
                                    "data_stream_preset_field_id": {
                                        "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
                                        "type": "string",
                                        "description": "UUID"
                                    },
                                    "name": {
                                        "maxLength": 200,
                                        "minLength": 1,
                                        "type": "string"
                                    },
                                    "searchable": [],
                                    "to_retrieve": []
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application\/json": []
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete specified search use case preset field",
                "responses": {
                    "204": {
                        "description": "",
                        "content": {
                            "application\/json": []
                        }
                    }
                }
            },
            "head": {
                "summary": "Get specified search use case preset field",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": []
                        }
                    }
                }
            },
            "patch": {
                "summary": "Update a specified search use case preset field",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "required": [
                                    "search_use_case_preset_id",
                                    "data_stream_preset_field_id",
                                    "name",
                                    "searchable",
                                    "to_retrieve"
                                ],
                                "properties": {
                                    "search_use_case_preset_id": {
                                        "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
                                        "type": "string",
                                        "description": "UUID"
                                    },
                                    "data_stream_preset_field_id": {
                                        "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
                                        "type": "string",
                                        "description": "UUID"
                                    },
                                    "name": {
                                        "maxLength": 200,
                                        "minLength": 1,
                                        "type": "string"
                                    },
                                    "searchable": [],
                                    "to_retrieve": []
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application\/json": []
                        }
                    }
                }
            }
        },
        "\/api\/searchUseCasePreset\/{searchUseCasePresetId}\/searchUseCasePresetField": {
            "get": {
                "summary": "Search use case preset search use case preset fields list",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": []
                        }
                    }
                }
            },
            "head": {
                "summary": "Search use case preset search use case preset fields list",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": []
                        }
                    }
                }
            }
        },
        "\/api\/widget": {
            "get": {
                "summary": "Show widget list",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": []
                        }
                    }
                }
            },
            "post": {
                "summary": "Create and store new widget",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "required": [
                                    "search_use_case_id",
                                    "name"
                                ],
                                "properties": {
                                    "search_use_case_id": {
                                        "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
                                        "type": "string",
                                        "description": "UUID"
                                    },
                                    "name": {
                                        "maxLength": 200,
                                        "minLength": 5,
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application\/json": []
                        }
                    }
                }
            },
            "head": {
                "summary": "Show widget list",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": []
                        }
                    }
                }
            }
        },
        "\/api\/widget\/{widgetId}": {
            "get": {
                "summary": "Get specified widget",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": []
                        }
                    }
                }
            },
            "put": {
                "summary": "Update a widget",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "required": [
                                    "search_use_case_id",
                                    "name"
                                ],
                                "properties": {
                                    "search_use_case_id": {
                                        "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
                                        "type": "string",
                                        "description": "UUID"
                                    },
                                    "name": {
                                        "maxLength": 200,
                                        "minLength": 5,
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application\/json": []
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete specified widget",
                "responses": {
                    "204": {
                        "description": "",
                        "content": {
                            "application\/json": []
                        }
                    }
                }
            },
            "head": {
                "summary": "Get specified widget",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": []
                        }
                    }
                }
            },
            "patch": {
                "summary": "Update a widget",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "required": [
                                    "search_use_case_id",
                                    "name"
                                ],
                                "properties": {
                                    "search_use_case_id": {
                                        "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
                                        "type": "string",
                                        "description": "UUID"
                                    },
                                    "name": {
                                        "maxLength": 200,
                                        "minLength": 5,
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application\/json": []
                        }
                    }
                }
            }
        },
        "\/api\/searchUseCase\/{searchUseCaseId}\/widget": {
            "get": {
                "summary": "Search use case widget list",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": []
                        }
                    }
                }
            },
            "head": {
                "summary": "Search use case widget list",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": []
                        }
                    }
                }
            }
        },
        "\/api\/widgetPreset": {
            "get": {
                "summary": "Show widget preset list",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": []
                        }
                    }
                }
            },
            "post": {
                "summary": "Create and store new widget preset",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "required": [
                                    "search_use_case_preset_id",
                                    "name"
                                ],
                                "properties": {
                                    "search_use_case_preset_id": {
                                        "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
                                        "type": "string",
                                        "description": "UUID"
                                    },
                                    "name": {
                                        "maxLength": 200,
                                        "minLength": 5,
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application\/json": []
                        }
                    }
                }
            },
            "head": {
                "summary": "Show widget preset list",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": []
                        }
                    }
                }
            }
        },
        "\/api\/widgetPreset\/{widgetPresetId}": {
            "get": {
                "summary": "Get specified widget preset",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": []
                        }
                    }
                }
            },
            "put": {
                "summary": "Update a widget preset",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "required": [
                                    "search_use_case_preset_id",
                                    "name"
                                ],
                                "properties": {
                                    "search_use_case_preset_id": {
                                        "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
                                        "type": "string",
                                        "description": "UUID"
                                    },
                                    "name": {
                                        "maxLength": 200,
                                        "minLength": 5,
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application\/json": []
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete specified widget preset",
                "responses": {
                    "204": {
                        "description": "",
                        "content": {
                            "application\/json": []
                        }
                    }
                }
            },
            "head": {
                "summary": "Get specified widget preset",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": []
                        }
                    }
                }
            },
            "patch": {
                "summary": "Update a widget preset",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "required": [
                                    "search_use_case_preset_id",
                                    "name"
                                ],
                                "properties": {
                                    "search_use_case_preset_id": {
                                        "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
                                        "type": "string",
                                        "description": "UUID"
                                    },
                                    "name": {
                                        "maxLength": 200,
                                        "minLength": 5,
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application\/json": []
                        }
                    }
                }
            }
        },
        "\/api\/searchUseCasePreset\/{searchUseCasePresetId}\/widgetPreset": {
            "get": {
                "summary": "Search use case preset widget presets list",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": []
                        }
                    }
                }
            },
            "head": {
                "summary": "Search use case preset widget presets list",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": []
                        }
                    }
                }
            }
        },
        "\/api\/dataStreamPreset\/{dataStreamPresetId}\/searchUseCasePreset": {
            "get": {
                "summary": "Data stream preset search use case preset list",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": []
                        }
                    }
                }
            },
            "head": {
                "summary": "Data stream preset search use case preset list",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": []
                        }
                    }
                }
            }
        },
        "\/api\/dataStreamPreset\/{dataStreamPresetId}\/widgetPreset": {
            "get": {
                "summary": "Data stream preset widget preset list",
                "description": "(Through the related search use case presets)",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": []
                        }
                    }
                }
            },
            "head": {
                "summary": "Data stream preset widget preset list",
                "description": "(Through the related search use case presets)",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": []
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "Project": {
                "properties": {
                    "id": {
                        "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
                        "type": "string",
                        "description": "UUID"
                    },
                    "search_engine_id": {
                        "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
                        "type": "string",
                        "description": "UUID"
                    },
                    "data_stream_id": {
                        "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
                        "type": "string",
                        "description": "UUID"
                    },
                    "name": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "ProjectList": {
                "type": "array",
                "items": "\/components\/schemas\/Project"
            }
        }
    }
}